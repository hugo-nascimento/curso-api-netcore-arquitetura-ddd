// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("MunicipioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Cep");

                    b.HasIndex("MunicipioId");

                    b.ToTable("Cep");
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CodIBGE")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<Guid>("UfId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CodIBGE");

                    b.HasIndex("UfId");

                    b.ToTable("Municipio");
                });

            modelBuilder.Entity("Api.Domain.Entities.UfEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Sigla")
                        .IsUnique();

                    b.ToTable("Uf");

                    b.HasData(
                        new
                        {
                            Id = new Guid("22a0bd4f-c522-4c60-97f0-16ca0e0d6acf"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8033),
                            Nome = "Acre",
                            Sigla = "AC"
                        },
                        new
                        {
                            Id = new Guid("2e21c8eb-cbaa-4235-98e8-ac3540276dc0"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8093),
                            Nome = "Alagoas",
                            Sigla = "AL"
                        },
                        new
                        {
                            Id = new Guid("7cb1b6c6-5e64-43f0-86fc-0a3b3e08432d"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8099),
                            Nome = "Amapá",
                            Sigla = "AP"
                        },
                        new
                        {
                            Id = new Guid("863f2e0d-2107-41c3-aa3f-57c647e8f400"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8103),
                            Nome = "Amazonas",
                            Sigla = "AM"
                        },
                        new
                        {
                            Id = new Guid("7fe87dfe-6362-4676-bfd0-95d072918585"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8109),
                            Nome = "Bahia",
                            Sigla = "BA"
                        },
                        new
                        {
                            Id = new Guid("8b0432f9-e794-4407-b8f3-d084eaa079f4"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8113),
                            Nome = "Ceará",
                            Sigla = "CE"
                        },
                        new
                        {
                            Id = new Guid("2c976982-9c2d-4479-b920-c5b2a07780f6"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8116),
                            Nome = "Espírito Santo",
                            Sigla = "ES"
                        },
                        new
                        {
                            Id = new Guid("9ac88f48-ca7b-4469-ae10-d1e8df5cf20b"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8120),
                            Nome = "Goiás",
                            Sigla = "GO"
                        },
                        new
                        {
                            Id = new Guid("8fbd96b4-d62a-41b4-9537-99de60723c92"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8124),
                            Nome = "Maranhão",
                            Sigla = "MA"
                        },
                        new
                        {
                            Id = new Guid("8b5a8424-700b-472c-a498-aed122a0924e"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8127),
                            Nome = "Mato Grosso",
                            Sigla = "MT"
                        },
                        new
                        {
                            Id = new Guid("909515cb-a35c-4477-b02a-5a0e16971fad"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8131),
                            Nome = "Mato Grosso do Sul",
                            Sigla = "MS"
                        },
                        new
                        {
                            Id = new Guid("8ff95a8b-60da-48ee-aee9-405e10de9488"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8135),
                            Nome = "Minas Gerais",
                            Sigla = "MG"
                        },
                        new
                        {
                            Id = new Guid("c3f8c57e-1132-4b48-a87f-d77782cbea02"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8138),
                            Nome = "Pará",
                            Sigla = "PA"
                        },
                        new
                        {
                            Id = new Guid("4a2f7aa7-bf01-42d9-b2e4-142483eaf3cc"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8142),
                            Nome = "Paraíba",
                            Sigla = "PB"
                        },
                        new
                        {
                            Id = new Guid("ec42a205-241e-459b-a3f1-da614e5a55cc"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8145),
                            Nome = "Paraná",
                            Sigla = "PR"
                        },
                        new
                        {
                            Id = new Guid("037527c0-19f4-4b15-9ba1-03cc88af3978"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8150),
                            Nome = "Pernambuco",
                            Sigla = "PE"
                        },
                        new
                        {
                            Id = new Guid("2c777073-9e1c-4a89-988c-e1c970a66571"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8153),
                            Nome = "Piauí",
                            Sigla = "PI"
                        },
                        new
                        {
                            Id = new Guid("b70610c8-1e91-4d86-b46d-b03b244db4c4"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8156),
                            Nome = "Rio de Janeiro",
                            Sigla = "RJ"
                        },
                        new
                        {
                            Id = new Guid("1254ea3a-35f2-4089-aedb-7aeaafffd307"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8160),
                            Nome = "Rio Grande do Norte",
                            Sigla = "RN"
                        },
                        new
                        {
                            Id = new Guid("7236af06-c7ae-4890-92f2-ea061cd24a0a"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8163),
                            Nome = "Rio Grande do Sul",
                            Sigla = "RS"
                        },
                        new
                        {
                            Id = new Guid("3540e439-94c0-44c1-aeb0-aef4f813f158"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8167),
                            Nome = "Rondônia",
                            Sigla = "RO"
                        },
                        new
                        {
                            Id = new Guid("101dce22-a876-406d-bfb7-8fdb2c708ca8"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8170),
                            Nome = "Roraima",
                            Sigla = "RR"
                        },
                        new
                        {
                            Id = new Guid("85266add-5a70-4024-a059-180ac6356051"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8173),
                            Nome = "Santa Catarina",
                            Sigla = "SC"
                        },
                        new
                        {
                            Id = new Guid("0a66e2bb-a0e0-497f-80a7-dd4181477ae6"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8177),
                            Nome = "São Paulo",
                            Sigla = "SP"
                        },
                        new
                        {
                            Id = new Guid("c7992b37-2dae-4684-a2c3-300e86755b70"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8180),
                            Nome = "Sergipe",
                            Sigla = "SE"
                        },
                        new
                        {
                            Id = new Guid("b19a38f4-58e5-4f8a-8c6e-b03d2b44b12d"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8184),
                            Nome = "Tocantins",
                            Sigla = "TO"
                        },
                        new
                        {
                            Id = new Guid("b1147acc-bab8-4263-91ec-6f85ebc907ff"),
                            CreateAt = new DateTime(2021, 8, 10, 18, 27, 1, 74, DateTimeKind.Utc).AddTicks(8188),
                            Nome = "Distrito Federal",
                            Sigla = "DF"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c513481-7bfd-4b71-9fc2-b96afc8ac9a7"),
                            CreateAt = new DateTime(2021, 8, 10, 15, 27, 1, 70, DateTimeKind.Local).AddTicks(3052),
                            Email = "admin@mail.com.br",
                            Name = "Administrador",
                            UpdateAt = new DateTime(2021, 8, 10, 15, 27, 1, 71, DateTimeKind.Local).AddTicks(7248)
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.CepEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.MunicipioEntity", "Municipio")
                        .WithMany("Ceps")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Api.Domain.Entities.MunicipioEntity", b =>
                {
                    b.HasOne("Api.Domain.Entities.UfEntity", "Uf")
                        .WithMany("Municipios")
                        .HasForeignKey("UfId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
